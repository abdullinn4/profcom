spring:
  config:
    import: optional:file:.env
  application:
    name: Profcom
  security:
    oauth2:
      client:
        registration:
          uenv:
            client-id: ${OAUTH2_CLIENT_ID}
            client-secret: ${OAUTH2_CLIENT_SECRET}
            redirect-uri: http://localhost:8080/login/oauth2/code/uenv
            scope: read
            authorization-grant-type: authorization_code
            client-name: UEnv
        provider:
          uenv:
            authorization-uri: https://uenv-core.kpfu.ru/oauth/authorize
            token-uri: https://uenv-core.kpfu.ru/oauth/token/
            user-info-uri: https://uenv-core.kpfu.ru/api/v1.0/profile/
            user-name-attribute: email

  datasource:
    url: ${DB_URL}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration

server:
  servlet:
    session:
      cookie:
        name: PROFCOM_SESSION
        same-site: none
        secure: true

baseUrl: http://localhost:8080
document:
  template:
    docx:
      standartScheme: src/main/resources/profburo/template.docx
logging:
  level:
    org.flywaydb.core: debug
#spring:
#  datasource:
#    url: ${DB_URL}
#    username: ${DB_USERNAME}
#    password: ${DB_PASSWORD}
#    driver-class-name: org.postgresql.Driver
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    properties:
#      hibernate:
#        format_sql: true
#        dialect: org.hibernate.dialect.PostgreSQLDialect
#  flyway:
#    enabled: true
#    baseline-on-migrate: true
#    locations: classpath:db/migration
#
#springdoc:
#  api-docs:
#    path: /api-docs
#  swagger-ui:
#    path: /swagger-ui.html
#    oauth2:
#      client-id: ${SWAGGER_UI_OAUTH2_CLIENT_ID}
#      client-secret: ${SWAGGER_UI_OAUTH2_CLIENT_SECRET}
#      realm: ${SWAGGER_UI_OAUTH2_REALM}
#      app-name: ${SWAGGER_UI_OAUTH2_APP_NAME}
#      scopes: ${SWAGGER_UI_OAUTH2_SCOPES}
#
#server:
#  port: 8080
